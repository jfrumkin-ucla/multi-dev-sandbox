@use "../utilities/colors";
@use "../utilities/variables";
@use "../utilities/_mixins/breakpoints";

/// Make list flush to the left side
/// @group Lists
@mixin list-flush() {
  margin: 0;
  padding: 0;

  li:before {
    content: none;
    margin: 0;
    padding: 0;
  }
}

/// Reset lists to that they have no styling
@mixin reset-list() {
  @include list-flush();
  list-style: none;

  li {
    list-style: none;

    &:before {
      content: none;
      margin: 0;
      padding: 0;
    }
  }
}

// Accordion Title
@mixin accordion-title($open-selector: false) {
  /*
  border-bottom: 1px solid colors.$grey-8;
  color: colors.$darker-blue;
  display: flex;
  font-weight: bold;
  margin: 0;
  padding: 1rem;
  padding-right: 2rem;

  &:hover {
    background-color: colors.$ucla-blue;
    color: colors.$white;
    cursor: pointer;

    &:after {
      filter: colors.$filter-color-white;
    }
  }

  &:after {
    background: url("../images/surface-images/chevron-blue.svg") no-repeat center;
    background-size: .4em;
    content: "";
    display: block;
    margin-left: auto;
    transform: rotate(90deg);
    width: 0.5em;
  }

  $open: "--open";
  @if ($open-selector) {
    $open: $open-selector;
  }

  &#//{$open} {
    border-bottom: 0;

    &:after {
      transform: rotate(-90deg);
    }
  }
   */

  background: rgba(0 0 0 / 0%);
  border: 0;
  border-top: 1px solid colors.$grey-10;
  box-sizing: border-box;
  color: colors.$default-state;
  font-size: variables.$ucla-font-size-default;
  font-weight: bold;
  line-height: 1.5;
  margin-top: 1px;
  //padding: 8px 32px 8px 16px;
  padding: 1rem 2rem 1rem 1rem;
  position: relative;
  text-align: left;
  width: 100%;

  &:focus {
    outline: 3px solid colors.$focus-state;
    outline-offset: -3px;
  }

  &:hover,
  &:active {
    background: colors.$hover-state;
    color: colors.$white;
    cursor: pointer;

    &::after {
      background: url("../images/icons/denotive/down--white.svg");
      background-position: center;
      background-size: contain;
      height: 24px;
      position: absolute;
      right: 16px;
      //top: 8px;
      top: 16px;
      width: 24px;
    }

    //@media (min-width: breakpoints.breakpoint-min(md)) {
    //  &::after {
    //    height: 32px;
    //    right: 16px;
    //    top: 16px;
    //    width: 32px;
    //  }
    //}
  }

  &.active {
    &::after {
      transform: scaleY(-1);
    }
  }

  &::after {
    background: url("../images/icons/denotive/down--blue.svg");
    background-position: center;
    background-size: contain;
    content: "";
    display: block;
    height: 24px;
    position: absolute;
    right: 16px;
    //top: 8px;
    top: 16px;
    width: 24px;
  }

  //@media (min-width: breakpoints.breakpoint-min(md)) {
  //  //font-size: variables.$ucla-font-size-large;
  //  //padding: 22px 64px 18px 16px;
  //
  //  &::after {
  //    background-size: contain;
  //    height: 32px;
  //    right: 16px;
  //    top: 16px;
  //    width: 32px;
  //  }
  //}

  &:last-of-type {
    border-bottom: none;
  }

  p {
    font-size: inherit;
  }
}

// Accordion Content.
@mixin accordion-content() {
  box-sizing: border-box;
  padding: 1rem 1rem 2rem 1rem;
}

.ucla-list--bulleted,
.text-formatted ul,
.ck-editor__editable ul {
  line-height: 1.5;
  list-style: none;
  padding-left: 28.5px;

  // First level list item
  li {
    margin-bottom: 16px;

    &::before {
      color: colors.$ucla-blue;
      content: "\25AA";
      margin-left: -18px;
      padding-right: 13px;
      width: 3em;
    }

    // Second level list item/lists
    li &::before {
      content: "\25AB";
    }

    .ucla-list--bulleted,
    .ucla-list--numbered,
    ul,
    ol {
      counter-reset: li;
      margin-top: 16px;
      padding-left: 20px;

      li {
        padding-left: 0;
      }
    }
  }
}

ul.list--link,
ul.list--link-icon,
.text-formatted ul.list--link,
.text-formatted ul.list--link-icon,
.ck-editor__editable ul.list--link,
.ck-editor__editable ul.list--link-icon {
  padding-left: 0;

  &.field--name-field-sf-related-links {
    margin-bottom: 2.5rem;
  }

  li {
    margin-bottom: 0;
  }

  li::before {
    content: none;
  }
}

// Related links styling
// This mixin creates the base related link styling without icons
@mixin link-related() {
  border-bottom: 1px solid colors.$grey-8;
  font-weight: bold;
  padding: 1rem;
  position: relative;
  text-decoration: none;

  &:visited {
    color: colors.$default-state;
  }

  &:hover {
    background-color: colors.$hover-state;
    color: colors.$white;
  }

  &:hover:after,
  &:focus:after {
    filter: colors.$filter-color-white;
  }

  &:focus {
    background-color: colors.$hover-state;
    color: colors.$white;
    outline-color: colors.$white;
    outline-offset: -.45em;
  }
}

.ucla-list--numbered,
.text-formatted ol,
.ck-editor__editable ol {
  counter-reset: li;
  line-height: 1.5;
  list-style: none;
  padding-left: 5px;

  // First level list item
  li {
    counter-increment: li;
    margin-bottom: 16px;
    padding-left: 24px;

    &::before {
      content: "." counter(li);
      color: colors.$ucla-blue;
      direction: rtl;
      display: inline-block;
      margin-left: -1.5em;
      margin-right: 0.5em;
      text-align: right;
      width: 1em;
    }

    // Second level lists
    .ucla-list--bulleted,
    .ucla-list--numbered,
    ul,
    ol {
      counter-reset: li;
      margin-top: 16px;
      padding-left: 20px;

      li {
        padding-left: 0;
      }
    }
  }
}

.ck-editor__editable .ck-list-bogus-paragraph {
    display: inline !important;
}

.ck-editor__editable ul li::marker, .ck-editor__editable ol li::marker {
  content: none !important;
}

// List: Flush `Modifier`
// Make list flush to the left side
%list--flush {
  @include list-flush();
  // add padding so that bullet points still show up inline
  padding-left: 1.25rem;
}

// List: Pipe `Modifier`
// Places each item in a horizontal list separated by a vertical pipe
%list--pipe {
  @include reset-list();

  li {
    border-right: 1px solid colors.$grey-40;
    display: inline-block;
    line-height: 1;
    margin-right: 0.25rem;
    padding-right: 0.5rem;

    &:before {
      display: none;
    }

    &:last-child {
      border-right: 0;
      margin-right: 0;
      padding-right: 0;
    }
  }
}

// List: Footer Links `Modifier`
// Places each item in a horizontal list separated by a vertical pipe
%list--inline {
  @include reset-list();

  li {
    display: inline-block;
    margin-right: 0.25rem;
    padding-right: 0.5rem;
  }
}

// List: Link `Modifier`
// Make list links show a styles link blocks
%list--link {
  @include reset-list();

  & > li {
    margin: 0;

    a {
      @include link-related();
      box-sizing: border-box;
      display: flex;
      justify-content: flex-start;

      em {
        margin-left: .25em;
      }
    }
  }
}

// List: Link Icon `Modifier`
// Make lists look like a .list--link once .icon-link classes get added via JS.
%list--link-icon {
  @include reset-list();

  li {
    margin: 0;

    a {
      @include link-related();
      box-sizing: border-box;
      display: flex;
      justify-content: space-between;
    }
  }
}

// List: Accordion `Modifier`
// Turns a list into a standard accordion drop down.
%list--accordion {
  @include reset-list();
  border-bottom: 1px solid colors.$grey-8;
  margin-bottom: 1rem;

  > li {
    margin: 0;

    &:nth-child(odd) {
      @include accordion-title(".active");
    }

    &:nth-child(even) {
      @include accordion-content();
    }
  }
}

// List: Wrap `Modifier`
// Allows a list to wrap around a left-floated block element.
%list--wraparound {
  left: 2.5em;
  margin-right: 2.5em;
  padding-left: 0;
  position: relative;

  ul,
  ol {
    left: 2.5em;
    margin-right: 2.5em;
    padding-left: 0;
    position: relative;
  }
}

// Assign placeholders to classes
.list--flush {
  @extend %list--flush;
}

.list--pipe {
  @extend %list--pipe;
}

.list--reset {
  @include reset-list();
}

.list--link {
  @extend %list--link;
}

.list--link-icon {
  @extend %list--link;
  @extend %list--link-icon;
}

.list--inline {
  @extend %list--inline;
}

.node__content .text-formatted .list--accordion,
ul.list--accordion {
  padding-left: 0;

  li {
    margin-bottom: 0;
  }

  li::before {
    content: none;
  }

  @extend %list--accordion;
}

.list--wraparound {
  @extend %list--wraparound;
}

// List Wrappers

// List Wrappers so that any lists further down the DOM will inherit the style
// even if they don't have the class applied directly to their list.
$list-wrapper-parents: (
  "flush",
  "pipe",
  "link",
  "link-icon",
  "wraparound"
);

@each $item in $list-wrapper-parents {
  .list-wrapper--#{$item} ul {
    @extend %list--#{$item};
  }
}

// List Modifiers
ol.list--lower-alpha {
  //list-style-type: lower-alpha;
  li::before {
    content: "." counter(li, lower-alpha);
  }
}

ol.list--lower-roman {
  //list-style-type: lower-roman;
  li::before {
    content: "." counter(li, lower-roman);
  }
}

ol.list--upper-alpha {
  //list-style-type: upper-alpha;
  li::before {
    content: "." counter(li, upper-alpha);
  }
}

ol.list--upper-roman {
  //list-style-type: upper-roman;
  li::before {
    content: "." counter(li, upper-roman);
  }
}

ol.list--none,
ul.list--none {
  list-style-type: none;
}

ol.list--inherit,
ul.list--inherit {
  list-style-type: inherit;
}

ol.list--alpha-numeric-roman {
  counter-reset: item;
  line-height: 1.5;
  li {
    margin-bottom: 1.5rem;
    margin-top: 1.5rem;
    font-size: 1rem;
    display: block ;
    counter-increment: item;
    &::before {
     content: counter(item, upper-alpha) ".";
     color:#000;
     display: inline;
    }
    ol {
      counter-reset: item;
      line-height: 1.5;
      li {
        display: block ;
        counter-increment: item;
        &::before {
        content: counter(item, decimal) ".";
        color:#000;
        display: inline;
        }
        ol {
          counter-reset: item;
          line-height: 1.5;
          li {
            display: block ;
            counter-increment: item;
            &::before {
            content: counter(item, lower-alpha) ".";
            color:#000;
            display: inline;
            }
            ol {
              counter-reset: count;
              line-height: 1.5;
              li {
                display: block ;
                counter-increment: count;
                &::before {
                content: counter(count, lower-roman) ".";
                color:#000;
                display: inline;
                }
              }
            }
          }
        }
      }
    }
  }
}

