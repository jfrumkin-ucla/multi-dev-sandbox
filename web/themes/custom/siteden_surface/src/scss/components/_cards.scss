@use "../utilities/_mixins/breakpoints";
@use "../utilities/colors";
@use "../utilities/variables";
@use "button";
@use "links";
@use "labels.scss";

.card {
  display: flex;
  flex-direction: column;

  .card__image {
    position: relative;
    z-index: 1;

    img {
      max-height: 20rem;
      object-fit: cover;
      object-position: center;
      width: 100%;
    }
  }

  .card__info-wrapper {
    background: colors.$grey-10;
    flex-basis: 100%;
    padding: 2rem 2rem 2.5rem 2rem;
    position: relative;
    z-index: 0;
    width: auto;
  }

  .card__info {
    background: inherit;
    display: block;
    padding: 0;
    margin: 0;
  }

  .card__text {
    > *:last-child {
      margin-bottom: 0;
    }
  }

  .card__footer {
    margin-bottom: -0.5rem;
    margin-top: 1.5rem;
    text-align: center;
  }

  .card__button {
    @extend .btn;
    @include button.button--primary();
    margin-right: 0.5rem;
    margin-bottom: 0.5rem;

    &:last-child {
      margin-right: 0;
    }
  }
}

// ==========================================================================
// Style options
// ==========================================================================

// Background color: white
.option--bg-color--white > .card,
.option--bg-color--white > .sf_card-grid > .card,
.card.card--bg-light {
  .card__info-wrapper {
    background-color: colors.$white;
  }
}

// Background color: dark blue
.option--bg-color--dark-blue > .card,
.option--bg-color--dark-blue > .sf_card-grid > .card,
.card.card--bg-blue {
  .card__info-wrapper {
    background-color: colors.$darker-blue;
  }

  .card__title {
    color: colors.$white;

    a {
      @include links.link-style--invert();
    }
  }

  .card__text {
    color: colors.$white;

    a {
      @include links.link-style--invert();

      &:hover {
        color:#000;

        &.link--external::after {
          filter: brightness(0);
        }
      }
    }

    a.btn.btn--invert {
      &.link--external, &.link--internal {
        color: #000 !important;

        &::after {
          filter: brightness(0) invert(0) !important;
        }
      }
    }

    .label.label--secondary {
      a, a.link--external, a.link--internal {
        color: #000 !important;

        &::after {
          filter: brightness(0) invert(0) !important;
        }
      }
    }
  }

  .card__button {
    @include button.button--primary--invert();
  }
}

// Border color: yellow
.option--bd-color--ucla-gold > .card,
.option--bd-color--ucla-gold > .sf_card-grid > .card {
  border-top: 5px solid colors.$ucla-gold
}

// Border color: dark blue
.option--bd-color--dark-blue > .card,
.option--bd-color--dark-blue > .sf_card-grid > .card {
  border-top: 5px solid colors.$darker-blue;
}

// Accent variants.
.card.card--accent {
  .card__title:before {
    background-color: colors.$ucla-blue;
    content: "";
    display: block;
    height: 0.25rem;
    margin-bottom: 1.25rem;
    width: 1.5rem;
  }
}

.card.card--accent.card--bg-blue {
  .card__title:before {
    background-color: colors.$ucla-gold;
  }
}

// Marketing Highlight Horizontal Card
.option--orientation--horizontal > .card {
  overflow: hidden;

  @media (min-width: breakpoints.breakpoint-min(lg)) {
    display: flex;
    flex-direction: row-reverse;
    position: relative;

    &:has(.card__image) {
      .card__info-wrapper {
        margin-right: -6.875rem;
        max-width: calc(40% + 6.875rem);
      }
    }
  }

  .card__image {
    position: relative;
    z-index: 0;

    img {
      max-width: 100%;
      width: 100%;
      height: auto;
      min-height: 10rem;
      vertical-align: middle;
      border-style: none;
    }

    @media (min-width: breakpoints.breakpoint-min(lg)) {
      flex-basis: 100%;
      max-width: 60%;
      vertical-align: baseline;

      img {
        min-height: 16rem;
      }
    }
  }

  .card__info-wrapper {
    background: colors.$grey-10;

    @media (min-width: breakpoints.breakpoint-min(lg)) {
      // Position to sit on top and overlap the image.
      background: transparent;
      display: flex;
      flex-direction: column;
      flex-basis: 100%;
      justify-content: center;
      margin: 0;
      padding: 0;
      z-index: 1;
    }

    .card__info {
      background: inherit;
      padding: 0;
      margin: 0;

      @media (min-width: breakpoints.breakpoint-min(lg)) {
        background: colors.$grey-10;
        padding: 1.8rem;

        h2 {
          &.card__title {
            font-size: 1.3rem;
          }
        }
      }
    }
  }
}

// Background color: white for horizontal card
.option--orientation--horizontal.option--bg-color--white > .card {
  .card__info-wrapper {
    background-color: colors.$white;
    .card__info {
      background-color: colors.$white;
    }
    @media (min-width: breakpoints.breakpoint-min(lg)) {
      background-color: transparent;
      .card__info {
        background-color: colors.$white;
      }
    }
  }
}

// Background color: blue for horizontal card
.option--orientation--horizontal.option--bg-color--dark-blue > .card {
  .card__info-wrapper {
    background-color: colors.$darker-blue;
    .card__info {
      background-color: colors.$darker-blue;
    }
    @media (min-width: breakpoints.breakpoint-min(lg)) {
      background-color: transparent;
      .card__info {
        background-color: colors.$darker-blue;
      }
    }
  }

  .card__title {
    color: colors.$white;

    a {
      @include links.link-style--invert();
    }
  }

  .card__text {
    color: colors.$white;

    a {
      @include links.link-style--invert();

      &:hover {
        color:#000;

        &.link--external::after {
          filter: brightness(0);
        }
      }
    }

    a.btn.btn--invert {
      &.link--external, &.link--internal {
        color: #000 !important;

        &::after {
          filter: brightness(0) invert(0) !important;
        }
      }
    }

    .label.label--secondary {
      a, a.link--external, a.link--internal {
        color: #000 !important;

        &::after {
          filter: brightness(0) invert(0) !important;
        }
      }
    }
  }

  .card__button {
    @include button.button--primary--invert();
  }
}
