{#
/**
 * @file
 * Theme override to display a DGC Factsheet in Full view mode.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
{% set classes = [
  'node',
  'node--type-' ~ node.bundle|clean_class,
  node.isPromoted() ? 'node--promoted',
  node.isSticky() ? 'node--sticky',
  not node.isPublished() ? 'node--unpublished',
  view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
] %}
{% set title_classes = [
  'field__label',
  label_display == 'visually_hidden' ? 'visually-hidden',
] %}
{% set newsids = [] %}
{% for item in content.field_dgc_project_news['#items'] %}
  {% set newsids = newsids | merge([item.target_id]) %}
{% endfor %}
{% set newskeyword = content.field_dgc_news_keyword.0|render|replace({'&quot;': '"'}) %}

{{ attach_library('classy/node') }}
<article{{ attributes.addClass('dgc_factsheet').addClass(classes) }}>
  <div class="dgc_factsheet__content">

    {{ content.body }}
    {{ content.field_dgc_main_goal }}
    {{ content.field_dgc_duration }}
    {{ content.field_dgc_participants }}
    {{ content.field_dgc_findings }}
    {{ content.field_dgc_publications }}

    {% if content.field_dgc_fact_sheet.0 or content.field_dgc_related_projects.0 %}
      <div class="field">
        <div class="field__label">Related Information</div>
        {{ content.field_dgc_fact_sheet }}
        {{ content.field_dgc_related_projects }}
      </div>
    {% endif %}

{# This is the news feed by tag, saving for future reference in case the keyword search doesn't work as expected. #}
{#    {% if content.field_dgc_project_news.0 and drupal_view_result('dgc_newsroom', 'block_2', newsids|join('+'))|length %}#}
{#      <div class="field field--name-field-dgc-project-news">#}
{#        <div class="field__label">Related News</div>#}
{#        {{ drupal_view('dgc_newsroom', 'block_2', newsids|join('+')) }}#}
{#      </div>#}
{#    {% endif %}#}

    {% if content.field_dgc_news_keyword.0 and drupal_view_result('dgc_newsroom', 'block_4', newskeyword)|length %}
      <div class="field field--name-field-dgc-project-news">
        <div class="field__label">Recent News</div>
        {{ drupal_view('dgc_newsroom', 'block_4', newskeyword) }}
      </div>
    {% endif %}

    {{ content.field_sf_related_links }}

  </div>

  <div class="dgc_factsheet__info">

    {{ content.field_sf_featured_media }}
    {{ content.field_dgc_status }}
    {{ content.field_dgc_focus_area }}
    {{ content.field_dgc_project_webpage }}
    {{ content.field_dgc_team }}
    {{ content.field_dgc_external_funders }}
    {{ content.field_dgc_funding_source }}

  </div>
</article>
